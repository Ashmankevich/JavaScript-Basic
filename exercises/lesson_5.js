//Tasks of Learn JS

//Task 1
/*–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –≤—ã–ø–æ–ª–Ω–∏–≤ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ –∫–∞–∂–¥–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π:

–°–æ–∑–¥–∞–π—Ç–µ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç user.
–î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ name —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º John.
–î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ surname —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º Smith.
–ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ name –Ω–∞ Pete.
–£–¥–∞–ª–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ name –∏–∑ –æ–±—ä–µ–∫—Ç–∞.
*/

user = {};
user.name = John;
user.surname = Smith;
user.name = Pete;
delete user.name;

//Task 2

/*
–°—É–º–º–∞ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞
–≤–∞–∂–Ω–æ—Å—Ç—å: 5
–£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω—è—Ç—Å—è –∑–∞—Ä–ø–ª–∞—Ç—ã –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã:

let salaries = {
  John: 100,
  Ann: 160,
  Pete: 130
}
–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –∑–∞—Ä–ø–ª–∞—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sum. –î–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å—Å—è 390.

–ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç salaries –ø—É—Å—Ç, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 0.
*/

function getSum() {
  let salaries = {
    John: 100,
    Ann: 160,
    Pete: 130,
  };

  let sum = 0;
  for (let value in salaries) {
    sum += salaries[value];
  }
  return sum;
}
getSum();

//Task 3
/*
–£–º–Ω–æ–∂–∞–µ–º –≤—Å–µ —á–∏—Å–ª–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–∞ 2
–≤–∞–∂–Ω–æ—Å—Ç—å: 3
–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é multiplyNumeric(obj), –∫–æ—Ç–æ—Ä–∞—è —É–º–Ω–æ–∂–∞–µ—Ç –≤—Å–µ —á–∏—Å–ª–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ obj –Ω–∞ 2.

–ù–∞–ø—Ä–∏–º–µ—Ä:

–¥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏
let menu = {
  width: 200,
  height: 300,
  title: "My menu"
};

multiplyNumeric(menu);

–ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏
menu = {
  width: 400,
  height: 600,
  title: "My menu"
};
*/

let menu = {
  width: 200,
  height: 300,
  title: "My menu",
};

multiplyNumeric(menu);

function multiplyNumeric(menu) {
  for (let key in menu) {
    if (typeof menu[key] == "number") {
      menu[key] *= 2;
    }
  }
}

console.log(menu);

//Task 4

/*
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É
–≤–∞–∂–Ω–æ—Å—Ç—å: 5
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isEmpty(obj), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ —É –æ–±—ä–µ–∫—Ç–∞ –Ω–µ—Ç —Å–≤–æ–π—Å—Ç–≤, –∏–Ω–∞—á–µ false.

–î–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫:

let schedule = {};

alert( isEmpty(schedule) ); // true

schedule["8:30"] = "get up";

alert( isEmpty(schedule) ); // false
*/

let schedule = {
  "8:30": "get up",
};

function isEmpty(schedule) {
  for (let key in schedule) {
    key = "smth";
    return false;
  }
  return true;
}
isEmpty(schedule);

//Task 5

/*
–°–æ–∑–¥–∞–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
–°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç calculator (–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä) —Å —Ç—Ä–µ–º—è –º–µ—Ç–æ–¥–∞–º–∏:

read() (—á–∏—Ç–∞—Ç—å) –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –∫–∞–∫ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞.
sum() (—Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
mul() (—É–º–Ω–æ–∂–∏—Ç—å) –ø–µ—Ä–µ–º–Ω–æ–∂–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
let calculator = {
  / ... –≤–∞—à –∫–æ–¥ ...
};

calculator.read();
alert( calculator.sum() );
alert( calculator.mul() );
*/

let calculator = {
  read() {
    this.numberOne = +prompt("Please, enter the number one", "");
    this.numberTwo = +prompt("Please, enter the number two", "");
  },
  sum() {
    return this.numberOne + this.numberTwo;
  },
  mul() {
    return this.numberOne * this.numberTwo;
  },
};
calculator.read();
console.log(calculator.sum());
console.log(calculator.mul());

//Task 6

/*
–¶–µ–ø—å –≤—ã–∑–æ–≤–æ–≤.
–£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç ladder (–ª–µ—Å—Ç–Ω–∏—Ü–∞), –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –∏ —Å–ø—É—Å–∫–∞—Ç—å—Å—è:

let ladder = {
  step: 0,
  up() {
    this.step++;
  },
  down() {
    this.step--;
  },
  showStep: function() { // –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—É–ø–µ–Ω—å–∫—É
    alert( this.step );
  }
};

–¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ –Ω–∞–º –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤, –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Ç–∞–∫:

ladder.up();
ladder.up();
ladder.down();
ladder.showStep(); // 1
ladder.down();
ladder.showStep(); // 0
–ò–∑–º–µ–Ω–∏—Ç–µ –∫–æ–¥ –º–µ—Ç–æ–¥–æ–≤ up, down –∏ showStep —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –∏—Ö –≤—ã–∑–æ–≤ –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ —Ü–µ–ø–æ—á–∫–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫:

ladder.up().up().down().showStep().down().showStep(); // –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 1 –∑–∞—Ç–µ–º 0
–¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ —à–∏—Ä–æ–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö JavaScript.
*/

let ladder = {
  step: 0,
  up() {
    this.step++;
    return this;
  },
  down() {
    this.step--;
    return this;
  },
  showStep() {
    console.log(this.step);
    return this;
  },
};
ladder.up().up().down().showStep().down().showStep();

//Task 7
/*
–î–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ - –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç
–≤–∞–∂–Ω–æ—Å—Ç—å: 2
–í–æ–∑–º–æ–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ A –∏ B, —á—Ç–æ–±—ã new A() == new B()?

function A() { ... }
function B() { ... }

let a = new A;
let b = new B;

alert( a == b ); // true
*/

let obj = {};

function A() {
  return obj;
}
function B() {
  return obj;
}

let a = new A();

let b = new B();

alert(a == b);

//Task 8

/*
–°–æ–∑–¥–∞–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, new Calculator
–≤–∞–∂–Ω–æ—Å—Ç—å: 5
–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Calculator, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç—ã —Å —Ç—Ä–µ–º—è –º–µ—Ç–æ–¥–∞–º–∏:

read() –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ prompt –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö –æ–±—ä–µ–∫—Ç–∞.
sum() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —ç—Ç–∏—Ö —Å–≤–æ–π—Å—Ç–≤.
mul() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —ç—Ç–∏—Ö —Å–≤–æ–π—Å—Ç–≤.
–ù–∞–ø—Ä–∏–º–µ—Ä:

let calculator = new Calculator();
calculator.read();

alert( "Sum=" + calculator.sum() );
alert( "Mul=" + calculator.mul() );
*/

function Calc() {
  this.read = function () {
    this.numberOne = +prompt("Please, enter the number one", "");
    this.numberTwo = +prompt("Please, enter the number two", "");
  };
  this.sum = function () {
    return this.numberOne + this.numberTwo;
  };
  this.mul = function () {
    return this.numberOne * this.numberTwo;
  };
}

let calc = new Calc();
calc.read();

alert("Sum=" + calc.sum());
alert("Mul=" + calc.mul());

// Task 9
/*
–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Accumulator(startingValue).

–û–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∞ —Å–æ–∑–¥–∞—ë—Ç, –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:

–•—Ä–∞–Ω–∏—Ç—å ¬´—Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ¬ª –≤ —Å–≤–æ–π—Å—Ç–≤–µ value. –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ startingValue.
–ú–µ—Ç–æ–¥ read() –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å prompt –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∏—Å–ª–∞ –∏ –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –∫ value.
–î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, —Å–≤–æ–π—Å—Ç–≤–æ value –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å—É–º–º—É –≤—Å–µ—Ö –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–Ω–∞—á–µ–Ω–∏–π,
—Å —É—á—ë—Ç–æ–º –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è startingValue.

–ù–∏–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—É –∫–æ–¥–∞:

let accumulator = new Accumulator(1); // –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 1

accumulator.read(); // –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫ —Ç–µ–∫—É—â–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é
accumulator.read(); // –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫ —Ç–µ–∫—É—â–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é

alert(accumulator.value); // –≤—ã–≤–µ–¥–µ—Ç —Å—É–º–º—É —ç—Ç–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
*/

function Accumulator(startingValue) {
  this.value = startingValue;
  this.read = function () {
    this.value += +prompt("Please, enter some value", "");
  };
}

let accumulator = new Accumulator(2);

accumulator.read();
accumulator.read();
console.log(accumulator.value);

//Tasks from TMS

//Task 1 üíª
/*–°–æ–∑–¥–∞—Ç—å –ª—é–±–æ–π –æ–±—å–µ–∫—Ç —Å –¥–≤—É–º—è –∫–ª—é—á–∞–º–∏ –∏ –ª—é–±—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ –Ω–∏—Ö, –∞ –∑–∞—Ç–µ–º —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á–∏ –∏–∑ –æ–±—å–µ–∫—Ç–∞.*/

let user = {
  "first name": "Andrew",
  "last name": "Ashmankevih",
};

delete user["first name"];
delete user["last name"];

console.log(user);

//Task 2 üñ•
/*–°–æ–∑–¥–∞—Ç—å –ª—é–±–æ–π –æ–±—å–µ–∫—Ç —Å –¥–≤—É–º—è –∫–ª—é—á–∞–º–∏ –∏ –ª—é–±—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ –Ω–∏—Ö, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
 –µ—Å—Ç—å –ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∫–ª—é—á –∏ –µ—Å–ª–∏ –µ—Å—Ç—å –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å true*/

let specialUser = {
  name: "Andrew",
  age: 30,
};

let key = "name";
console.log(key in specialUser);

//Task 3 üñ•
/*–î–∞–Ω –æ–±—ä–µ–∫—Ç:

    const student = {
        name: 'John',
        age: 19,
        isHappy: true
    }
C –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ for in –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–Ω–∞—á–∞–ª–∞ –≤—Å–µ –∫–ª—é—á–∏, –ø–æ—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏—è –∫–ª—é—á–µ–π –æ–±—ä–µ–∫—Ç–∞*/

const student = {
  name: "John",
  age: 19,
  isHappy: true,
};

for (let key in student) {
  console.log(key);
  console.log(student[key]);
}

//Task 4 üñ•
/*–î–∞–Ω –æ–±—ä–µ–∫—Ç:

const colors = {
    'ru pum pu ru rum': {
        red: '–∫—Ä–∞—Å–Ω—ã–π',
        green: '–∑–µ–ª–µ–Ω—ã–π',
        blue: '—Å–∏–Ω–∏–π'
    },
};
–í—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–ª–æ–≤–æ –∫—Ä–∞—Å–Ω—ã–π –∏ —Å–∏–Ω–∏–π*/

const colors = {
  "ru pum pu ru rum": {
    red: "–∫—Ä–∞—Å–Ω—ã–π",
    green: "–∑–µ–ª–µ–Ω—ã–π",
    blue: "—Å–∏–Ω–∏–π",
  },
};

console.log(
  colors["ru pum pu ru rum"].red,
  "–∏",
  colors["ru pum pu ru rum"].blue
);

//Task 5 üñ•
/*
–î–∞–Ω –æ–±—ä–µ–∫—Ç:

    let salaries = {
        andrey: 500,
        sveta: 413,
        anton: 987,
        andrey: 664,
        alexandra: 199
    }
–í—ã—á–∏—Å–ª–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –∑–∞—Ä–ø–ª–∞—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
*/

let salaries = {
  andrey: 500,
  sveta: 413,
  anton: 987,
  alex: 664,
  alexandra: 199,
};

let count = 0;
for (let key in salaries) {
  count += 1;
}

let sum = 0;
for (let key in salaries) {
  sum += salaries[key];
}

function getSalaries() {
  return sum / count;
}
getSalaries();

//Task 6 üñ•
/*–°–æ–∑–¥–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä, –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. 
–ó–∞—Ç–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –æ–±—ä–µ–∫—Ç. –ü–æ—Ç–æ–º –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. 
–ï—Å–ª–∏ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–í–∞—Ç—å.
*/

let validator = {
  greeting: "welcome",
  init() {
    this.login = prompt("Please, enter your login", "");
    this.password = prompt("Please, enter your password");
    return this;
  },
  confirm() {
    this.loginConfirm = prompt("Please, confirm your login", "");
    this.passwordConfirm = prompt("Please, confirm your password");
    return this;
  },
  check() {
    if (
      this.login == this.loginConfirm &&
      this.password == this.passwordConfirm
    );
    return this.greeting;
  },
};

function getValidator(validator) {
  return validator.init().confirm().check();
}
getValidator(validator);

//ADVANCED level
/*Task 1 üë®‚Äçüè´
–ú—ã –Ω–∞ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–º –º–∞—Ç—á–µ, —Å—á–µ—Ç –∑–∞–±–∏—Ç—ã—Ö –≥–æ–ª–æ–≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 9 –º—è—á–µ–π. 
–ñ–∞–ª—å —á—Ç–æ –Ω–∞–º –ø—Ä–∏—Å—ã–ª–∞—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '2:5', –≤–µ–¥—å –Ω–∞–º –Ω–∞–¥–æ —ç—Ç–æ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–ª–æ–≤–∞–º–∏. 
–î–∞–≤–∞–π—Ç–µ –Ω–∞–ø–∏—à–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∑–∞ –Ω–∞—Å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å.
*/

let numbers = {
  one: 1,
  two: 2,
  three: 3,
  four: 4,
  five: 5,
  six: 6,
  seven: 7,
  eight: 8,
  nine: 9,
};

function getScore(a, b) {
  let score;
  for (let key in numbers) {
    if (a == numbers[key]) {
      a = key;
    }
  }
  for (let key in numbers) {
    if (b == numbers[key]) {
      b = key;
    }
  }
  return (score = `${a} : ${b}`);
}
getScore(6, 9);

//Task 2 üñ•
/*
–î–∞–Ω—ã –¥–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–∞. –°—Ä–∞–≤–Ω–∏—Ç–µ –∏—Ö —Ç–∞–∫ —á—Ç–æ–±—ã –æ–Ω–∏ –±—ã–ª–∏ —Ä–∞–≤–Ω—ã

    let student1 = {
        name: 'Polina',
        age: 27,
    }

    let student2 = {
        name: 'Polina',
        age: 27,
    }
*/

//Task 3 üñ•
/*
–£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏. –ù–∞—à–∞ –∑–∞–¥–∞—á–∞ —É–∑–Ω–∞—Ç—å –∏–º—è –ø—Ç–∏—Ü—ã –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å. 
–ù–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏ –≤ —ç—Ç–æ–º –æ–±—å–µ–∫—Ç–µ –Ω–µ—Ç—É –ø—Ç–∏—Ü—ã. –ï—Å–ª–∏ –ø–æ–ø—Ä–æ–±—É–µ–º —É–∑–Ω–∞—Ç—å –∏–º—è –º—ã –ø–æ–ª—É—á–∏–º –û–®–ò–ë–ö–£. 
–ó–∞–¥–∞—á–∞ –ø—Ä–∏–¥—É–º–∞—Ç—å –∫–∞–∫ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É –∏ 
–Ω–µ –ø–æ–ª—É—á–∏—Ç—å –æ—à–∏–±–∫—É —á—Ç–æ–±—ã –Ω–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ –¥–∞–ª—å—à–µ.

const animals = {
   cat: {
      name: '–ï–Ω—á–∏–∫',
      age: 3,
   },
   dog: {
      name: '–û—Ä–µ–æ',
      age: 2,
   }
}
*/
